{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dist/internalApi.js","dist/lib.js","dist/threadedclass-worker.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/ieee754/index.js","node_modules/is-running/index.js","node_modules/process/browser.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","lib_1","isRunning","InitPropType","MessageType","ArgumentType","DEFAULT_CHILD_FREEZE_TIME","Worker","[object Object]","this","instanceHandles","callbacks","disabledMultithreading","_parentPid","log","data","sendLog","logError","handle","args","decodeArguments","instance","Promise","resolve","reject","callbackId","sendCallback","err","encodedResult","result","decodeArgumentsFromParent","encodeArguments","m","reply","sendReplyToParent","cmdId","undefined","error","replyTo","msg","cmd","REPLY","stack","toString","sendMessageToParent","LOG","cb","CALLBACK","obj","props","concat","getOwnPropertyNames","getPrototypeOf","instanceId","INIT","id","queue","pModuleClass","_config","config","parentPid","isBrowser","oReq","XMLHttpRequest","open","modulePath","onload","response","send","then","bodyString","fcn","exportName","moduleClass","eval","decodedArgs","apply","allProps","getAllProperties","forEach","prop","indexOf","descriptor","getOwnPropertyDescriptor","inProto","proto","__proto__","descr","enumerable","writable","get","set","readable","push","key","type","FUNCTION","VALUE","catch","console","disableMultithreading","startOrphanMonitoring","PING","fixedArgs","encodeArgumentsToParent","errorResponse","replyError","SET","fixedValue","property","KILL","killInstance","callback","setInterval","setTimeout","process","exit","argumentsCallbackId","map","arg","OBJECT","Buffer","BUFFER","original","STRING","NUMBER","UNDEFINED","NULL","OTHER","getCallback","from","hasOwnProperty","getWorkerThreads","browserSupportsWebWorkers","window","nodeSupportsWorkerThreads","internalApi_1","WorkerThreads","message","parentPort","postMessage","ThreadedWorker","super","arguments","assign","worker","onmessage","onMessageFromParent","on","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","join","Uint8Array","Array","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","for","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","prototype","encodingOrOffset","TypeError","allocUnsafe","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","fromArrayBuffer","SharedArrayBuffer","valueOf","b","isBuffer","checked","copy","numberIsNaN","isArray","fromObject","toPrimitive","assertSize","size","array","byteOffset","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","species","configurable","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","constructor","name","table","i16","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","isNaN","floor","LN2","pid","stub","kill","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask"],"mappings":"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","file":"threadedclass-worker.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lib_1 = require(\"./lib\");\nconst isRunning = require(\"is-running\");\nexports.DEFAULT_CHILD_FREEZE_TIME = 1000; // how long to wait before considering a child to be unresponsive\nvar InitPropType;\n(function (InitPropType) {\n    InitPropType[\"FUNCTION\"] = \"function\";\n    InitPropType[\"VALUE\"] = \"value\";\n})(InitPropType = exports.InitPropType || (exports.InitPropType = {}));\nvar MessageType;\n(function (MessageType) {\n    MessageType[\"INIT\"] = \"init\";\n    MessageType[\"PING\"] = \"ping\";\n    MessageType[\"FUNCTION\"] = \"fcn\";\n    MessageType[\"REPLY\"] = \"reply\";\n    MessageType[\"LOG\"] = \"log\";\n    MessageType[\"SET\"] = \"set\";\n    MessageType[\"KILL\"] = \"kill\";\n    MessageType[\"CALLBACK\"] = \"callback\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\nvar ArgumentType;\n(function (ArgumentType) {\n    ArgumentType[\"STRING\"] = \"string\";\n    ArgumentType[\"NUMBER\"] = \"number\";\n    ArgumentType[\"UNDEFINED\"] = \"undefined\";\n    ArgumentType[\"NULL\"] = \"null\";\n    ArgumentType[\"OBJECT\"] = \"object\";\n    ArgumentType[\"FUNCTION\"] = \"function\";\n    ArgumentType[\"BUFFER\"] = \"buffer\";\n    ArgumentType[\"OTHER\"] = \"other\";\n})(ArgumentType = exports.ArgumentType || (exports.ArgumentType = {}));\nclass Worker {\n    constructor() {\n        this.instanceHandles = {};\n        this.callbacks = {};\n        this.disabledMultithreading = false;\n        this._parentPid = 0;\n        this.log = (...data) => {\n            this.sendLog(data);\n        };\n        this.logError = (...data) => {\n            this.sendLog(['Error', ...data]);\n        };\n    }\n    decodeArgumentsFromParent(handle, args) {\n        // Note: handle.instance could change if this was called for the constructor parameters, so it needs to be loose\n        return decodeArguments(() => handle.instance, args, (a) => {\n            return ((...args) => {\n                return new Promise((resolve, reject) => {\n                    const callbackId = a.value;\n                    this.sendCallback(handle, callbackId, args, (err, encodedResult) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            const result = encodedResult ? this.decodeArgumentsFromParent(handle, [encodedResult]) : [encodedResult];\n                            resolve(result[0]);\n                        }\n                    });\n                });\n            });\n        });\n    }\n    encodeArgumentsToParent(instance, args) {\n        return encodeArguments(instance, this.callbacks, args, this.disabledMultithreading);\n    }\n    reply(handle, m, reply) {\n        this.sendReplyToParent(handle, m.cmdId, undefined, reply);\n    }\n    replyError(handle, m, error) {\n        this.sendReplyToParent(handle, m.cmdId, error);\n    }\n    sendReplyToParent(handle, replyTo, error, reply) {\n        let msg = {\n            cmd: MessageType.REPLY,\n            replyTo: replyTo,\n            error: error ? (error.stack || error).toString() : error,\n            reply: reply\n        };\n        this.sendMessageToParent(handle, msg);\n    }\n    sendLog(log) {\n        let msg = {\n            cmd: MessageType.LOG,\n            log: log\n        };\n        this.sendMessageToParent(null, msg);\n    }\n    sendCallback(handle, callbackId, args, cb) {\n        let msg = {\n            cmd: MessageType.CALLBACK,\n            callbackId: callbackId,\n            args: args\n        };\n        this.sendMessageToParent(handle, msg, cb);\n    }\n    getAllProperties(obj) {\n        let props = [];\n        do {\n            props = props.concat(Object.getOwnPropertyNames(obj));\n            obj = Object.getPrototypeOf(obj);\n        } while (obj);\n        return props;\n    }\n    onMessageFromParent(m) {\n        // A message was received from Parent\n        let handle = this.instanceHandles[m.instanceId];\n        if (!handle && m.cmd !== MessageType.INIT) {\n            console.log(`Child process: Unknown instanceId: \"${m.instanceId}\"`);\n            return; // fail silently?\n        }\n        if (!handle) {\n            // create temporary handle:\n            handle = {\n                id: m.instanceId,\n                cmdId: 0,\n                queue: {},\n                instance: {}\n            };\n        }\n        try {\n            const instance = handle.instance;\n            if (m.cmd === MessageType.INIT) {\n                const msg = m;\n                this._config = m.config;\n                this._parentPid = m.parentPid;\n                let pModuleClass;\n                // Load in the class:\n                if (lib_1.isBrowser()) {\n                    pModuleClass = new Promise((resolve, reject) => {\n                        // @ts-ignore\n                        let oReq = new XMLHttpRequest();\n                        oReq.open('GET', msg.modulePath, true);\n                        // oReq.responseType = 'blob'\n                        oReq.onload = () => {\n                            if (oReq.response) {\n                                resolve(oReq.response);\n                            }\n                            else {\n                                reject(Error(`Bad reply from ${msg.modulePath} in instance ${handle.id}`));\n                            }\n                        };\n                        oReq.send();\n                    })\n                        .then((bodyString) => {\n                        // This is a terrible hack, I'm ashamed of myself.\n                        // Better solutions are very much appreciated.\n                        // tslint:disable-next-line:no-var-keyword\n                        var f = null;\n                        let fcn = `\n\t\t\t\t\t\t\tf = function() {\n\t\t\t\t\t\t\t\t${bodyString}\n\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t\treturn ${msg.exportName}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t`;\n                        // tslint:disable-next-line:no-eval\n                        let moduleClass = eval(fcn)();\n                        f = f;\n                        if (!moduleClass) {\n                            throw Error(`${msg.exportName} not found in ${msg.modulePath}`);\n                        }\n                        return moduleClass;\n                    });\n                }\n                else {\n                    pModuleClass = Promise.resolve(require(msg.modulePath))\n                        .then((module) => {\n                        return module[msg.exportName];\n                    });\n                }\n                pModuleClass\n                    .then((moduleClass) => {\n                    if (!moduleClass) {\n                        return Promise.reject('Failed to find class');\n                    }\n                    const handle = {\n                        id: msg.instanceId,\n                        cmdId: 0,\n                        queue: {},\n                        instance: null // Note: This is dangerous, but gets set right after.\n                    };\n                    const decodedArgs = this.decodeArgumentsFromParent(handle, msg.args);\n                    handle.instance = ((...args) => {\n                        return new moduleClass(...args);\n                    }).apply(null, decodedArgs);\n                    this.instanceHandles[handle.id] = handle;\n                    const instance = handle.instance;\n                    const allProps = this.getAllProperties(instance);\n                    const props = [];\n                    allProps.forEach((prop) => {\n                        if ([\n                            'constructor',\n                            '__defineGetter__',\n                            '__defineSetter__',\n                            'hasOwnProperty',\n                            '__lookupGetter__',\n                            '__lookupSetter__',\n                            'isPrototypeOf',\n                            'propertyIsEnumerable',\n                            'toString',\n                            'valueOf',\n                            '__proto__',\n                            'toLocaleString'\n                        ].indexOf(prop) !== -1)\n                            return;\n                        let descriptor = Object.getOwnPropertyDescriptor(instance, prop);\n                        let inProto = 0;\n                        let proto = instance.__proto__;\n                        while (!descriptor) {\n                            if (!proto)\n                                break;\n                            descriptor = Object.getOwnPropertyDescriptor(proto, prop);\n                            inProto++;\n                            proto = proto.__proto__;\n                        }\n                        if (!descriptor)\n                            descriptor = {};\n                        let descr = {\n                            // configurable:\t!!descriptor.configurable,\n                            inProto: inProto,\n                            enumerable: !!descriptor.enumerable,\n                            writable: !!descriptor.writable,\n                            get: !!descriptor.get,\n                            set: !!descriptor.set,\n                            readable: !!(!descriptor.get && !descriptor.get) // if no getter or setter, ie an ordinary property\n                        };\n                        if (typeof instance[prop] === 'function') {\n                            props.push({\n                                key: prop,\n                                type: InitPropType.FUNCTION,\n                                descriptor: descr\n                            });\n                        }\n                        else {\n                            props.push({\n                                key: prop,\n                                type: InitPropType.VALUE,\n                                descriptor: descr\n                            });\n                        }\n                    });\n                    this.reply(handle, msg, props);\n                    return;\n                })\n                    .catch((e) => {\n                    console.log('INIT error', e);\n                });\n                if (!m.config.disableMultithreading) {\n                    this.startOrphanMonitoring();\n                }\n            }\n            else if (m.cmd === MessageType.PING) {\n                this.reply(handle, m, null);\n            }\n            else if (m.cmd === MessageType.REPLY) {\n                const msg = m;\n                let cb = handle.queue[msg.replyTo + ''];\n                if (!cb)\n                    throw Error(`cmdId \"${msg.cmdId}\" not found in instance ${m.instanceId}!`);\n                if (msg.error) {\n                    cb(msg.error);\n                }\n                else {\n                    cb(null, msg.reply);\n                }\n                delete handle.queue[msg.replyTo + ''];\n            }\n            else if (m.cmd === MessageType.FUNCTION) {\n                // A function has been called by parent\n                let msg = m;\n                const fixedArgs = this.decodeArgumentsFromParent(handle, msg.args);\n                let p = (typeof instance[msg.fcn] === 'function' ?\n                    instance[msg.fcn](...fixedArgs) :\n                    instance[msg.fcn]); // in case instance[msg.fcn] does not exist, it will simply resolve to undefined on the consumer side\n                Promise.resolve(p)\n                    .then((result) => {\n                    const encodedResult = this.encodeArgumentsToParent(instance, [result]);\n                    this.reply(handle, msg, encodedResult[0]);\n                })\n                    .catch((err) => {\n                    let errorResponse = (err.stack || err.toString()) + `\\n executing function \"${msg.fcn}\" of instance \"${m.instanceId}\"`;\n                    this.replyError(handle, msg, errorResponse);\n                });\n            }\n            else if (m.cmd === MessageType.SET) {\n                let msg = m;\n                const fixedValue = this.decodeArgumentsFromParent(handle, [msg.value])[0];\n                instance[msg.property] = fixedValue;\n                this.reply(handle, msg, fixedValue);\n            }\n            else if (m.cmd === MessageType.KILL) {\n                let msg = m;\n                // kill off instance\n                this.killInstance(handle);\n                this.reply(handle, msg, null);\n            }\n            else if (m.cmd === MessageType.CALLBACK) {\n                let msg = m;\n                let callback = this.callbacks[msg.callbackId];\n                if (callback) {\n                    try {\n                        Promise.resolve(callback(...msg.args))\n                            .then((result) => {\n                            const encodedResult = this.encodeArgumentsToParent(instance, [result]);\n                            this.reply(handle, msg, encodedResult[0]);\n                        })\n                            .catch((err) => {\n                            let errorResponse = (err.stack || err.toString()) + `\\n executing callback of instance \"${m.instanceId}\"`;\n                            this.replyError(handle, msg, errorResponse);\n                        });\n                    }\n                    catch (err) {\n                        let errorResponse = (err.stack || err.toString()) + `\\n executing (outer) callback of instance \"${m.instanceId}\"`;\n                        this.replyError(handle, msg, errorResponse);\n                    }\n                }\n                else {\n                    this.replyError(handle, msg, `Callback \"${msg.callbackId}\" not found on instance \"${m.instanceId}\"`);\n                }\n            }\n        }\n        catch (e) {\n            if (m.cmdId) {\n                this.replyError(handle, m, `Error: ${e.toString()} ${e.stack} on instance \"${m.instanceId}\"`);\n            }\n            else\n                this.log('Error: ' + e.toString(), e.stack);\n        }\n    }\n    startOrphanMonitoring() {\n        if (this._config) {\n            const pingTime = 5000;\n            setInterval(() => {\n                if (this._parentPid && !isRunning(this._parentPid)) {\n                    console.log(`Parent pid ${this._parentPid} missing, exiting process!`);\n                    setTimeout(() => {\n                        process.exit(27);\n                    }, 100);\n                }\n            }, pingTime);\n        }\n    }\n}\nexports.Worker = Worker;\nlet argumentsCallbackId = 0;\nfunction encodeArguments(instance, callbacks, args, disabledMultithreading) {\n    try {\n        return args.map((arg, i) => {\n            try {\n                if (typeof arg === 'object' && arg === instance) {\n                    return { type: ArgumentType.OBJECT, value: 'self' };\n                }\n                if (disabledMultithreading) {\n                    // In single-threaded mode, we can send the arguments directly, without any conversion:\n                    if (arg instanceof Buffer)\n                        return { type: ArgumentType.BUFFER, original: arg, value: null };\n                    if (typeof arg === 'object')\n                        return { type: ArgumentType.OBJECT, original: arg, value: null };\n                }\n                if (arg instanceof Buffer)\n                    return { type: ArgumentType.BUFFER, value: arg.toString('hex') };\n                if (typeof arg === 'string')\n                    return { type: ArgumentType.STRING, value: arg };\n                if (typeof arg === 'number')\n                    return { type: ArgumentType.NUMBER, value: arg };\n                if (typeof arg === 'function') {\n                    const callbackId = argumentsCallbackId++;\n                    callbacks[callbackId + ''] = arg;\n                    return { type: ArgumentType.FUNCTION, value: callbackId + '' };\n                }\n                if (arg === undefined)\n                    return { type: ArgumentType.UNDEFINED, value: arg };\n                if (arg === null)\n                    return { type: ArgumentType.NULL, value: arg };\n                if (typeof arg === 'object')\n                    return { type: ArgumentType.OBJECT, value: arg };\n                return { type: ArgumentType.OTHER, value: arg };\n            }\n            catch (e) {\n                if (e.stack)\n                    e.stack += '\\nIn encodeArguments, argument ' + i;\n                throw e;\n            }\n        });\n    }\n    catch (e) {\n        if (e.stack)\n            e.stack += '\\nThreadedClass, unsupported attribute';\n        throw e;\n    }\n}\nexports.encodeArguments = encodeArguments;\nfunction decodeArguments(instance, args, getCallback) {\n    // Go through arguments and de-serialize them\n    return args.map((a) => {\n        if (a.original !== undefined)\n            return a.original;\n        if (a.type === ArgumentType.STRING)\n            return a.value;\n        if (a.type === ArgumentType.NUMBER)\n            return a.value;\n        if (a.type === ArgumentType.BUFFER)\n            return Buffer.from(a.value, 'hex');\n        if (a.type === ArgumentType.UNDEFINED)\n            return a.value;\n        if (a.type === ArgumentType.NULL)\n            return a.value;\n        if (a.type === ArgumentType.FUNCTION) {\n            return getCallback(a);\n        }\n        if (a.type === ArgumentType.OBJECT) {\n            if (a.value === 'self') {\n                return instance();\n            }\n            else {\n                return a.value;\n            }\n        }\n        return a.value;\n    });\n}\nexports.decodeArguments = decodeArguments;\n//# sourceMappingURL=internalApi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns true if running in th browser (if not, then we're in NodeJS)\n */\nfunction isBrowser() {\n    return !(process && process.hasOwnProperty('stdin'));\n}\nexports.isBrowser = isBrowser;\nfunction browserSupportsWebWorkers() {\n    // @ts-ignore\n    return !!(isBrowser() && window.Worker);\n}\nexports.browserSupportsWebWorkers = browserSupportsWebWorkers;\nfunction nodeSupportsWorkerThreads() {\n    const workerThreads = getWorkerThreads();\n    return !!workerThreads;\n}\nexports.nodeSupportsWorkerThreads = nodeSupportsWorkerThreads;\nfunction getWorkerThreads() {\n    try {\n        const workerThreads = require('worker_threads');\n        return workerThreads;\n    }\n    catch (e) {\n        return null;\n    }\n}\nexports.getWorkerThreads = getWorkerThreads;\n//# sourceMappingURL=lib.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst internalApi_1 = require(\"./internalApi\");\nconst lib_1 = require(\"./lib\");\nconst WorkerThreads = lib_1.getWorkerThreads();\n/* This file is the one that is launched in the worker child process */\nfunction send(message) {\n    if (WorkerThreads) {\n        if (WorkerThreads.parentPort) {\n            WorkerThreads.parentPort.postMessage(message);\n        }\n        else {\n            throw Error('WorkerThreads.parentPort not set!');\n        }\n    }\n    else if (process.send) {\n        process.send(message);\n        // @ts-ignore global postMessage\n    }\n    else if (postMessage) {\n        // @ts-ignore\n        postMessage(message);\n    }\n    else\n        throw Error('process.send and postMessage are undefined!');\n}\nclass ThreadedWorker extends internalApi_1.Worker {\n    constructor() {\n        super(...arguments);\n        this.instanceHandles = {};\n    }\n    sendMessageToParent(handle, msg, cb) {\n        if (msg.cmd === internalApi_1.MessageType.LOG) {\n            const message = Object.assign(Object.assign({}, msg), {\n                cmdId: 0,\n                instanceId: ''\n            });\n            send(message);\n        }\n        else {\n            const message = Object.assign(Object.assign({}, msg), {\n                cmdId: handle.cmdId++,\n                instanceId: handle.id\n            });\n            if (cb)\n                handle.queue[message.cmdId + ''] = cb;\n            send(message);\n        }\n    }\n    killInstance(handle) {\n        delete this.instanceHandles[handle.id];\n    }\n}\n// const _orgConsoleLog = console.log\nif (lib_1.isBrowser()) {\n    const worker = new ThreadedWorker();\n    // console.log = worker.log\n    // @ts-ignore global onmessage\n    onmessage = (m) => {\n        // Received message from parent\n        if (m.type === 'message') {\n            worker.onMessageFromParent(m.data);\n        }\n        else {\n            console.log('child process: onMessage', m);\n        }\n    };\n}\nelse if (lib_1.nodeSupportsWorkerThreads()) {\n    if (WorkerThreads) {\n        const worker = new ThreadedWorker();\n        console.log = worker.log;\n        console.error = worker.logError;\n        if (WorkerThreads.parentPort) {\n            WorkerThreads.parentPort.on('message', (m) => {\n                // Received message from parent\n                worker.onMessageFromParent(m);\n            });\n        }\n        else {\n            throw Error('WorkerThreads.parentPort not set!');\n        }\n    }\n    else {\n        throw Error('WorkerThreads not available!');\n    }\n}\nelse if (process.send) {\n    const worker = new ThreadedWorker();\n    console.log = worker.log;\n    console.error = worker.logError;\n    process.on('message', (m) => {\n        // Received message from parent\n        worker.onMessageFromParent(m);\n    });\n}\nelse {\n    throw Error('process.send and onmessage are undefined!');\n}\n//# sourceMappingURL=threadedclass-worker.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","module.exports = function (pid) {\n  if (module.exports.stub !== module.exports) {\n      return module.exports.stub.apply(this, arguments);\n  }\n  try {\n    return process.kill(pid,0)\n  }\n  catch (e) {\n    return e.code === 'EPERM'\n  }\n}\nmodule.exports.stub = module.exports;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"]}